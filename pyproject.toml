[tool.poetry]
name = "dipdup"
description = "Modular framework for creating selective indexers and featureful backends for dapps"
version = "8.0.0a1"
license = "MIT"
authors = [
    "Lev Gorodetskii <dipdup@drsr.io>",
    "Vladimir Bobrikov <vladimir_bobrikov@pm.me>",
    "Michael Zaikin <mz@baking-bad.org>",
]
maintainers = [
    "Lev Gorodetskii <dipdup@drsr.io>",
    "Vladimir Bobrikov <vladimir_bobrikov@pm.me>",
]
readme = "README.md"
keywords = [
    "api",
    "backend",
    "blockchain",
    "crypto",
    "cryptocurrencies",
    "dapp",
    "declarative",
    "ethereum",
    "evm",
    "framework",
    "indexer",
    "indexers",
    "michelson",
    "scheduler",
    "sdk",
    "smart-contracts",
    "tezos",
    "tzkt",
    "web3",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
# NOTE: Core dependencies; keep pinned between major versions.
datamodel-code-generator = "~=0.25.0"
pyarrow = "~=16.0"
pydantic = "~=2.2"
sentry-sdk = "~=2.0"
tortoise-orm = "0.20.1"
web3 = "~=6.18"
#
aiohttp = "~=3.9"
aiolimiter = "~=1.0"
anyio = ">=4.1.0"
APScheduler = "~=3.8"
async-lru = "~=2.0"
asyncclick = "~=8.0"
asyncpg = "~=0.29"
eth-abi = ">=5.0.1,<6"
orjson = "~=3.9"
prometheus-client = "~=0.17"
pycryptodome = "~=3.17"
pyhumps = "~=3.0"
pysignalr = "~=1.0"
python-dotenv = "~=1.0"
"ruamel.yaml" = "~=0.17"
sqlparse = "~=0.4"
strict-rfc3339 = "~=0.7"
survey = "~=5.3"
tabulate = "~=0.9"

[tool.poetry.urls]
Homepage = "https://dipdup.io/"
Documentation = "https://dipdup.io/docs"
Repository = "https://github.com/dipdup-io/dipdup"

[tool.poetry.scripts]
dipdup = "dipdup.cli:cli"

[tool.poetry.group.dev.dependencies]
black = "*"
docker = "*"
mypy = "*"
pytest = "~=7.4"
pytest-aiohttp = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-xdist = "*"
ruff = "*"
types-pytz = "*"
types-tabulate = "*"

[tool.poetry.group.docs.dependencies]
Sphinx = "*"
sphinx-click = "*"
sphinx-markdown-builder = "*"
watchdog = "*"

[tool.black]
line-length = 120
target-version = ["py312"]
skip-string-normalization = true

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
ignore = [
    "E402",   # module level import not at top of file
    "E501",   # line too long
    "TCH001", # breaks our runtime Pydantic magic
    "UP040",  # PEP 695 type aliases are not yet supported by mypy
]
extend-select = ["B", "C4", "FA", "G", "I", "PTH", "Q", "RET", "RUF", "TCH", "UP"]
flake8-quotes = { inline-quotes = "single", multiline-quotes = "double" }
isort = { force-single-line = true, known-first-party = ["dipdup"] }

[tool.mypy]
python_version = "3.12"
plugins = ["pydantic.mypy"]
strict = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
log_cli_level = "WARNING"

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "raise FrameworkException",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "if TYPE_CHECKING:",
    "if env.DEBUG:",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
